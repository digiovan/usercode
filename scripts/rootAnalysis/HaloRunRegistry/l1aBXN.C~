// ------------------------------------------------------------------------------
// TTree
// ------------------------------------------------------------------------------
TTree* Ntuple;

// ------------------------------------------------------------------------------
// histograms
// ------------------------------------------------------------------------------
TH1F* hL1ABXN; //L1A BXN from GT

// ------------------------------------------------------------------------------
// variables
// ------------------------------------------------------------------------------
double Pi  = TMath::Pi();

const int MAXCSCTFTR = 60;
const int MAXCSCTFLCTSTR = 4;
const int MAXCSCTFSPS = 12;

void l1aBXN(TString runNumber  = "123893",
	    int     printLevel =       0 ,
	    bool    isSave     =    !true) {


  
  gROOT->Clear();
  gInterpreter->LoadMacro("/afs/cern.ch/user/d/digiovan/scripts/Init/"
			  "modifiedStyle.C");

  
  
  //--------------------------------------------------------------------------
  // Construct the chain of input files
  //--------------------------------------------------------------------------
  TString chainMacro("scripts/HaloRunRegistry/chains/");
  chainMacro += "collsionsChain";
  chainMacro += runNumber;
  chainMacro += ".C";

  cout << "Loading chain: " << chainMacro.Data() << endl;
  gInterpreter->ExecuteMacro(chainMacro.Data());
  
  // get the Nutple  
  TChain* Ntuple  = collisionsChain;
  cout << "Ntuple->GetEntries(): " << Ntuple->GetEntries() << endl;
  
   //----------------------------------------------------------------------------
   // Access the needed variables
   //----------------------------------------------------------------------------
   int    Run, Event, Bx;

   int    csctf_trSize;

   Ntuple -> SetBranchAddress("Run", &Run );
   Ntuple -> SetBranchAddress("Event", &Event );
   Ntuple -> SetBranchAddress("Bx", &Bx );
   Ntuple -> SetBranchAddress("csctf_trSize", &csctf_trSize);

   // --------------------------------------------------------------------------- 
   // Histograms
   // ---------------------------------------------------------------------------  
   hL1ABXN    = new TH1F("hL1ABXN", "", 3600, 0 , 3600);

   // --------------------------------------------------------------------------- 
   // Loop over the events
   // ---------------------------------------------------------------------------  
   for (int iEvt=0; iEvt < Ntuple->GetEntries(); iEvt++) {
   
     Ntuple->GetEntry(iEvt);
     
     if (csctf_trSize)
       hL1ABXN -> Fill(Bx);
	
    
   }// end Loop evts
   if (printLevel > 0)
     printf("\n----------------------------------------"
	    "----------------------------------------\n");
   
   // --------------------------------------------------------------------------- 
   // hL1ABXN
   // ---------------------------------------------------------------------------  
   SetStyleh1(hL1ABXN, 629, 3001, 1, "L1A (BX)");
   TCanvas* L1ABXN = new TCanvas("L1ABXN", "", 0, 0, 800, 800);

   hL1ABXN -> Draw();

   PrintIt(L1ABXN, "L1A BXN Distribution");
       
} // end 
